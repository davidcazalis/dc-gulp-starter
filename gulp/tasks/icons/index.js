var config = require('../../config');

var gulp = require('gulp');
var path = require('path');
var browserSync = require('browser-sync');
var iconfont = require('gulp-iconfont');
var consolidate = require('gulp-consolidate');
var plumber = require('gulp-plumber');
var errorAlert = require('../../libs/errorAlert');
var logAlert = require('../../libs/logAlert');

var iconsTask = function() {


  var settings = {
    src: path.join(config.root.src, config.tasks.icons.src, '/*.svg'),
    dest: path.join(config.root.dest, config.tasks.fonts.dest),
    cssDest: path.join(config.root.src, config.tasks.css.src),
    name: config.tasks.icons.iconfont.fontName,
    options: config.tasks.icons.iconfont,
    fontPath: path.relative(path.join(config.root.dest, config.tasks.css.dest), path.join(config.root.dest, config.tasks.fonts.dest))+'/',
    className: config.tasks.icons.class,
    template: path.normalize(path.join(config.root.tasks, '/iconfont/_component.icons.scss'))
  }

  logAlert('Creating icon fonts.', 'info', settings.dest);

  return gulp.src(settings.src)
    .pipe(iconfont(settings.options))
    .on('glyphs', function(glyphs, options) {
      gulp.src(settings.template)
        .pipe(consolidate('lodash', {
          glyphs: glyphs,
          fontName: settings.name,
          fontPath: settings.fontPath,
          className: settings.className,
          comment: "IT'S A TRAP !\n// Do not edit this file !\n// Generated by : "+settings.template
        }))
        .pipe(gulp.dest(settings.cssDest))
        .pipe(browserSync.stream());
    })
    .on('error', errorAlert)
    .pipe(gulp.dest(settings.dest))
    .pipe(browserSync.stream());
}

gulp.task("icons", iconsTask);

module.exports = iconsTask;
